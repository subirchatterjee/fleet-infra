apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: writefreely-${discord_cool_name}
  namespace: flux-system
spec:
  releaseName: writefreely-${discord_cool_name}
  targetNamespace: personal
  chart:
    spec:
      chart: app-template
      version: "1.5.1"
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  interval: 2m0s
  values:
    image:
      repository: ghcr.io/tyzbit/writefreely
      tag: latest
    command: sh
    args:
      - -c
      - |
        /go/cmd/writefreely/writefreely -c /config/config.ini db init && \
        /go/cmd/writefreely/writefreely -c /config/config.ini user add --admin "$${discord_cool_admin_username}:$${discord_cool_admin_password}"
        cmd/writefreely/writefreely -c /config/config.ini

    controller:
      annotations:
        reloader.stakater.com/auto: "true"
      replicas: 1 # active longhorn
      type: statefulset

    podSecurityContext:
      fsGroup: 2 #justlonghornthings

    initContainers:
      setup:
        image: ghcr.io/tyzbit/writefreely:latest
        command:
          - sh
          - -c
          - |
            /go/cmd/writefreely/writefreely config gen && \
            /go/cmd/writefreely/writefreely keys gen && \
            for folder in templates static pages keys; do
              cp -an /go/$${folder}/* /config/$${folder}/
            done
        volumeMounts:
          - name: folders
            subPath: templates
            mountPath: /config/templates
          - name: folders
            subPath: static
            mountPath: /config/static
          - name: folders
            subPath: pages
            mountPath: /config/pages
          - name: folders
            subPath: keys
            mountPath: /config/keys

    additionalContainers:
      filebrowser:
        name: filebrowser
        image: filebrowser/filebrowser:v2
        args: ["-d", "/db/database.db"]
        env:
          - name: TZ
            value: America/New_York
        volumeMounts:
          - name: folders
            subPath: templates
            mountPath: /srv/config/templates
          - name: folders
            subPath: static
            mountPath: /srv/config/static
          - name: folders
            subPath: pages
            mountPath: /srv/config/pages
          - name: folders
            subPath: keys
            mountPath: /srv/config/keys

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    # probes:
    #   liveness:
    #     enabled: true
    #     custom: true
    #     spec: &spec
    #       httpGet:
    #         httpHeaders:
    #           - name: Host
    #             value: ${discord_cool_domain}
    #           - name: X-Real-IP
    #             value: &ip 172.18.0.1
    #           - name: X-Forwarded-For
    #             value: *ip
    #         port: 8080
    #         path: /
    #       failureThreshold: 3
    #       periodSeconds: 2
    #       successThreshold: 1
    #       timeoutSeconds: 5
    #   readiness:
    #     enabled: true
    #     custom: true
    #     spec: *spec
    #   startup:
    #     enabled: true
    #     custom: true
    #     spec:
    #       !!merge <<: *spec
    #       failureThreshold: 15
    #       initialDelaySeconds: 5

    persistence:
      config:
        enabled: true
        name: writefreely-${discord_cool_name}-config
        type: configMap
        mountPath: /config/config.ini
        subPath: config.ini
        readOnly: true
        defaultMode: 0755
      folders:
        enabled: true
        subPath:
          - path: templates
            mountPath: /config/templates
          - path: static
            mountPath: /config/static
          - path: pages
            mountPath: /config/pages
          - path: keys
            mountPath: /config/keys
        existingClaim: writefreely-${discord_cool_name}-longhorn-webapp

    service:
      main:
        enabled: true
        type: ClusterIP
        ports:
          http:
            port: 8080

      filebrowser:
        enabled: true
        primary: false
        name: writefreely-${discord_cool_name}-filebrowser
        ports:
          fbhttp:
            enabled: true
            port: 80

    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt
          acme.cert-manager.io/http01-edit-in-place: "false"
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: ${cloudflared_tunnel_uuid}.cfargotunnel.com
        hosts:
          - host: &host "${discord_cool_domain}"
            paths:
              - path: "/"
          - host: &hostfb "fb.${discord_cool_domain}"
            paths:
              - path: "/"
                service:
                  name: writefreely-${discord_cool_name}-filebrowser
                  port: 80
        tls:
          - hosts:
              - *host
              - *hostfb
            secretName: ${discord_cool_domain}-multi-tls

    podAnnotations:
      reloader.stakater.com/auto: "true"

    resources:
      requests:
        cpu: "50m"
      limits:
        memory: "384Mi"
