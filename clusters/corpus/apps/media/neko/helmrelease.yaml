# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${neko_name}-neko
  namespace: flux-system
spec:
  releaseName: ${neko_name}-neko
  targetNamespace: media
  chart:
    spec:
      chart: app-template
      version: "3.2.1"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 2m0s
  valuesFrom:
    - kind: Secret
      name: ${neko_name}-neko
  values:
    controllers:
      neko:
        replicas: 1 # active nas
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          neko:
            image:
              # results in a blank screen
              # repository: ghcr.io/m1k1o/neko/intel-firefox
              repository: ghcr.io/m1k1o/neko/firefox
              tag: "2.8.11"
            env:
              NEKO_SCREEN: 1280x720@30
              NEKO_PROXY: "true"
              NEKO_TCPMUX: &mux "5100"
              NEKO_UDPMUX: *mux
              NEKO_ICELITE: "true"
              NEKO_BROADCAST_URL: rtmp://${neko_name}-neko-nginx-rtmp/l/neko
            resources:
              requests:
                cpu: 1400m

    persistence:
      config:
        name: neko-firefox-config
        type: configMap
        advancedMounts:
          neko:
            filebrowser:
              - path: /usr/lib/firefox/distribution/policies.json
                subPath: policies.json
      profile:
        enabled: true
        existingClaim: neko-firefox-profile-nas
        advancedMounts:
          neko:
            filebrowser:
              - path: /home/neko/.mozilla/firefox/profile.default
      dri:
        type: hostPath
        hostPath: /dev/dri
      shm:
        type: hostPath
        hostPath: /dev/shm

    service:
      main:
        controller: neko
        type: ClusterIP
        ports:
          http:
            port: 80
            targetPort: 8080
          mux:
            port: &port 5100
          muxudp:
            port: *port
            protocol: UDP

    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          acme.cert-manager.io/http01-edit-in-place: "true"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ${home_domain_ddns}
        hosts:
          - host: ${neko_domain}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: 80

        tls:
          - secretName: ${neko_domain}-tls
            hosts:
              - ${neko_domain}
